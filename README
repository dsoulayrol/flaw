This is Flaw, an OO framework to handle Awesome widgets.

Flaw stands for Fully Loaded AWesome. It is an object oriented
framework which aims at helping creating widgets for Awesome
wiboxes.

- Flaw provides gadgets, which are a layer above Awesome widgets. A
  gadget is a widget augmented with properties, and a provider.

- Providers are a solution to minimize the widgets updates needs. A
provider can be used by multiple widgets. A provider maintains status
data from the system and refreshes only when necessary.

Example:

require('flaw')

...

-- Create battery monitor
w_batteryicon = flaw.gadget.new(
   'flaw.battery.imagebox', 'BAT0',
   {
      images = {
         [flaw.battery.STATUS_UNKNOWN] = image(beautiful.battery_icon),
         [flaw.battery.STATUS_PLUGGED] = image(beautiful.battery_icon),
         [flaw.battery.STATUS_CHARGING] = image(beautiful.battery_icon),
         [flaw.battery.STATUS_DISCHARGING] = image(beautiful.battery_icon)
      }
   },
   {}
).widget
w_batterybox = flaw.gadget.new(
   'flaw.battery.textbox', 'BAT0').widget

-- Create network monitor
w_netbox = flaw.gadget.new(
   'flaw.network.textbox', 'wlan0', { pattern = '[$net_in]' }).widget

    conf.screens[s].wibox.widgets = {
       ...,
       w_batteryicon,
       w_batterybox,
       w_netbox,
       ...
    }
